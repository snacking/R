#homework 1
install.packages("ggplot2", dependencies = TRUE)

#homework2
a = 1
.a = 1
print("a")
cat("a")
num = sample(1:50, 10, replace = TRUE)
for(it in num) if(it > 10) print(it)
i = 1
j = 1
len = length(num)
while(i <= len) {
	while(j < len - i) {
		if(num[j] < num[j + 1]) {
			tmp = num[j]
			num[j] = num[j + 1]
			num[j + 1] = tmp
		}
		j = j + 1
	}
	i = i + 1
}
print(num)

#homework 3
num <- sample(1:100, 10, replace = TRUE)
group <- c("math", "math", "eng", "eng", "chi", "math","chi","eng","chi","chi")
group <- factor(group)
print("avg:")
tapply(num, group, mean)
print("raw:")
print(num)
num2 <- sample(1:100, 10, replace = TRUE)
num3 <- sample(1:100, 10, replace = TRUE)
df1 <- data.frame(num, num2, num3, group)
df1
df2 <- cbind(num2, num3, num, group)
df3 <- rbind(num, num3, num2, group)
df2
df3
library(openxlsx)
load_csv1 <- read.csv("ADdata2.csv")
load_csv1 <- data.frame(load_csv1)
load_txt1 <- read.table("ADdata1.txt", header = TRUE)
load_txt1 <- data.frame(load_txt1, header = TRUE)
load_txt2 <- read.table("ADdata4.txt",header = TRUE)
load_txt2 <- data.frame(load_txt2)
load_xlsx <- read.xlsx("ADdata3.xlsx")
load_xlsx <- data.frame(load_xlsx)
merge_data1 <- merge(load_csv1,load_xlsx,by.x = "X", by.y = "Var.1")
merge_data2 <- merge(merge_data1,load_txt1,by.x = "X", by.y = "X")
merge_data3 <- merge(merge_data2,load_txt2,by.x = "X", by.y = "X")
library(xlsx)
write.csv(merge_data3, file = "merge_data1.csv")
write.table(merge_data3, file = "merge_data2.txt")
xlsx::write.xlsx(merge_data3, file = "merge_data3.xlsx")
tem1 <- load_txt1[order(load_txt1$X),]
tem2 <- load_txt2[order(load_txt2$X),]
tem3 <- load_csv1[order(load_csv1$X),]
tem4 <- load_xlsx[order(load_xlsx$Var.1),]
cbind_merge_df1 <- cbind(tem1, tem2, tem3, tem4)
cbind_merge_df1 <- cbind_merge_df1[c(-18, -35, -52)]
list_name <- dir("./data",pattern = ".csv")
merge_data <- read.csv(file = paste("data",list_name[1],sep = "/",collapse = ","),header=T,sep=",")
for (i in 2:length(list_name)){
  new_data <- read.csv(file = paste("data",list_name[i],sep = "/",collapse = ","),header=T,sep=",")
  merge_data <- cbind(merge_data,new_data)
}
write.table(merge_data, file = "merge_data.xlsx")

#homework 4
list_name <- list.files(path = "./data", pattern = ".csv")
merge_data <- read.csv(file = paste("data",list_name[1],sep = "/",collapse = ","),header=F,sep="\t")
for (i in 2:length(list_name)){
  new_data <- read.csv(file = paste("data",list_name[i],sep = "/",collapse = ","),header=F,sep="\t")
  merge_data <- cbind(merge_data,new_data)
}
names(merge_data) = c(1:276)
save(merge_data, file = "merge_data2.Rdata")
inf_txt <- read.table("./data/GSE67835-GPL15520_series_matrix.txt",skip = 35,nrows = 25,sep = "\t")
inf_txt <- inf_txt[c(2,10,11,12),]
inf_txt <- inf_txt[,-1]
row.names(inf_txt) = c("GEO_accession", "tissue", "celltype","age")
inf_txt[2,] <- gsub("tissue: ", "", inf_txt[2,])
inf_txt[3,] <- gsub("cell type: ", "", inf_txt[3,])
inf_txt[4,] <- gsub("age: ", "", inf_txt[4,])
colnames(inf_txt) <- inf_txt[1,]
inf_txt <- inf_txt[-1,]
inf_txt <- t(inf_txt)
GSE_list_name <- (list.files(path = "./data", pattern = ".csv"))
GSE_list_name <- as.data.frame(substr(GSE_list_name,1,10))
colnames(GSE_list_name) = "GEO_accession"
index_gse <- match(inf_txt[,1], GSE_list_name[,1])
row.names(merge_data) = merge_data[,1]
new_merge_data <- merge_data[,seq(2,276,by = 2)]
colnames(new_merge_data) = GSE_list_name[,1]
new_merge_data <- t(new_merge_data)
all_merge_data <- cbind(new_merge_data,inf_txt)
write.csv(all_merge_data, file = "all_merge_data.csv")
row.names(match_merge_data) = match_merge_data[,1]
match_merge_data <- match_merge_data[,-1]
new_match_merge_data <- match_merge_data == 0
count_fun <- function(data, m, n){
  result <- c(1:m)
  for(i in 1:m){
    count <- 0
    for(j in 1:n){
      count <- count + data[i,j]
    }
    result[i] <- count
  }
  return(result)
}
result1 <- count_fun(new_match_merge_data, 100,64)
result2 <- count_fun(t(new_match_merge_data), 64, 100)
result1
result2
apply(new_match_merge_data,1,sum)
apply(new_match_merge_data,2,sum)
row_ma_data <- as.matrix(new_match_merge_data)
col_ma_data <- as.matrix(t(new_match_merge_data))
row_ma <- matrix(1,64,1)
col_ma <- matrix(1,100,1)
row_count <- new_match_merge_data %*% row_ma
col_count <- t(new_match_merge_data) %*% col_ma
row_count
col_count

#homework 5
library(devtools)
library(ggfortify)
library(ggbiplot)
library(ggplot2)
load("ADdata.RData")
load("gse67835.RData")
data1 <- unlist(ADdata)
data2 <- unlist(GSE67835)
hist(log10(data1),breaks = 10,xlab = "log10(AData)",col = c("azure","beige","cyan"))
hist(log10(as.numeric(data2)),breaks = 10,xlab = "GSE",col = "cadetblue")
ADdata_pic <- hist(x=ADdata$asym54,breaks = 100,col="pink")
hist(log10(ADdata$asym54),breaks = 10,xlab = "log10(asym54)",main = "histogram of log10(asym54)",col = "pink")
hist(log(as.numeric(GSE67835[,6])),breaks = 5,xlab = "log10(A2M)",main = "histogram of log10(A2M)",col = "pink")
load("ADdata.RData")
ADdata <- t(ADdata)
type <- gsub("\\d","",rownames(ADdata))
type <- as.data.frame(type)
ADdata <- cbind(ADdata,type)
ADdata<-as.data.frame(ADdata)
pca <- ADdata[,1:100]
new_pca <- prcomp(pca,scale. = T, center = T)
library(ggfortify)
autoplot(new_pca,data = ADdata,col= 'type',size=3,
         frame = TRUE,frame.type='norm',
         label = T, label.size = 3)+
  theme_classic()
load("GSE.RData")
data.pca <- data[,4:22091]
gse_pca <- prcomp(data.pca,center = T,scale. = F,retx = T)
names(data)[2]="celltype"
library(ggfortify)
autoplot(gse_pca,data = data,col = "celltype",size=2,
         frame = TRUE,frame.type='norm',
         label = TRUE, label.size = 3)+ 
  theme_classic()

#homework 6
load("ADdata.RData")
ADdata <- -t(ADdata)
scale_data <- scale(ADdata)
d <- dist(scale_data)
fit1<-hclust(d,method = "average")
windows()
plot(fit1,hang = -1,cex=.8)
dist1 <- dist(ADdata,method = "manhattan")
dist123 <- dist(t(ADdata),method = "manhattan")
dist123 <- hclust(dist123,method = "average")
windows()
plot(dist123,hang=-1,cex=.8)
windows()
heatmap(as.matrix(d))
library(factoextra)
library(igraph)
windows()
fviz_dend(fit1,k=4,rect =T,rect_fill = T,type = "circular",
          rect_border = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"))
library(ggplot2)
library(ggrepel)
load("class6_volcano.RData")
prostat$FC1 <- 2^prostat$FC
FC1 = 1.2 
P = 0.05 
prostat$FC2 <- log(prostat$FC1,base=1.2)
prostat$mark = as.factor(ifelse(prostat$P < 0.05 & abs(prostat$FC2) > 1 ,ifelse(prostat$FC2< 1 ,'Up','Down'),'NoSignifi'))
windows()
ggplot(data = prostat, aes(x = FC, y = -log10(P), colour=mark,label = ID)) +
  geom_point(alpha=0.4, size=3.5) +
  scale_color_manual(values = c("#004B97","#8E8E8E","#5B00AE")) +
  xlim(c(-2, 2)) +
  geom_vline(xintercept=c(-0.3,0.3),lty=2,col="black",lwd=0.5) +
  geom_hline(yintercept = -log10(0.05),lty=2,col="black",lwd=0.5)+
  labs(x="log2(fold change)",y="-log10 (p-value)",title="vocano") +
  theme(plot.title = element_text(hjust = 0.5), legend.position="right", legend.title = element_blank())
ggsave("prostat.jpg",width = 12,height = 10)

#homework 7
rm(list = ls())
setwd("E:\\Program Files\\RStudio\\Rwork\\data for class3")
load("debug.RData")
ADdata[ADdata == 0] <- NA 
ADdata <- log2(ADdata) 
ADdata <- t(ADdata)
type <- gsub("\\d","",rownames(ADdata))
type <- as.data.frame(type)
ADdata <- cbind(ADdata,type)
ADdata<-as.data.frame(ADdata)
pos_ad <- type == "ad"
pos_asym <- type == "asym"
pos_ctl <- type == "ctl"
pvalue <- c(1:100)
for(i in 1:100){
 
  ad <- sum(!is.na(ADdata[pos_ad,i]))
  ctl <- sum(!is.na(ADdata[pos_ctl,i]))
  asym <- sum(!is.na(ADdata[pos_asym,i]))
  if(ad >= 3 & ctl >= 3 & asym >= 3){
    p <- oneway.test(ADdata[,i]~type, ADdata)
    pvalue[i-1] <- p$p.value
  }
  else{
    pvalue[i -1] = NA
  }
}
protein <- as.data.frame(colnames(ADdata))
protein <- as.data.frame(protein[1:100,])
pvalue <- as.data.frame(cbind(protein,pvalue))
colnames(pvalue) <- c("protein","P")
library(clusterProfiler)
library(org.Hs.eg.db)
library(ggplot2)
load("class6_volcano.RData")
P <- prostat$P
a <- P < 0.05
pro_data <- prostat[a,]
pro_ID <- pro_data$ID[!is.na(pro_data$ID)]
GOresult <- enrichGO(pro_ID,"org.Hs.eg.db",keyType = "SYMBOL",ont = "BP",pvalueCutoff = 0.05,
                  pAdjustMethod = "BH",minGSSize = 10,maxGSSize = 500)
barplot(GOresult, showCategory = 20,drop = T)
dotplot(GOresult, showCategory = 30)